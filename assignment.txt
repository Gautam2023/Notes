#3. Write a Python program to get the largest number from a list.

my_list = [5, 4, 25, 6, 2]

max = my_list[0]
for i in range(len(my_list)):
    if my_list[i] > max:
        max = my_list[i]

print(max)

#4. Write a Python program to get the smallest number from a list.

my_list = [5, 4, 25, 6, 2]

min = my_list[0]
for i in range(len(my_list)):
    if my_list[i] < min:
        min = my_list[i]

print(min)

# 5. Write a Python program to count the number of strings where the string length is
#  2 or more and the first and 
# last character are same from a given list of strings. 
# Sample List : ['abc', 'xyz', 'aba', '1221']
# Expected Result : 2

my_list2 = ['abc', 'xyz', 'aba', '1221']
count = 0
for i in my_list2:
    if len(i) > 2:
        if i[0] == i[-1]:
            count += 1

print(count)

# 6. Write a Python program to get a list, sorted in increasing order by the last 
# element in each tuple from a given list of non-empty tuples. 
# Sample List : [(2, 5), (1, 2), (4, 4), (2, 3), (2, 1)]
# Expected Result : [(2, 1), (1, 2), (2, 3), (4, 4), (2, 5)]

my_list3=[(2, 5), (1, 2), (4, 4), (2, 3), (2, 1)]
for i in range(len(my_list3)):
    for j in range(i+1,len(my_list3)):
        if my_list3[i][1]>my_list3[j][1]:
            my_list3[i],my_list3[j]=my_list3[j],my_list3[i]
print(my_list3)

#7. Write a Python program to remove duplicates from a list

my_list4 = [1, 1, 5, 2, 5, 5, 5]
new_list=[]

for i in my_list4:
    if i not in new_list:
        new_list.append(i)

print(new_list)

#8. Write a Python program to check a list is empty or not.

my_list5 = []

if len(my_list5) == 0:
    print("list is empty")
else:
    print("list is not empty")

#9. Write a Python program to clone or copy a list.

my_list6 = [1, 2, 3, 4, 5]
new_list = []

for i in my_list6:
    new_list.append(i)

print(new_list)

#10. Write a Python program to find the list of words that are longer than n from a given list of words.

my_list7 = ["The quick brown fox jumps over the lazy dog"]
num = int(input("enter a number: "))

list_of_words = my_list7[0].split()
for i in list_of_words:
    if len(i) > num:
        print(i)

#11. Write a Python function that takes two lists and returns True if 
# they have at least one common member. 

def cmmn_elmnt(list1, list2):
    for i in list1:
        for j in list2:
            if i == j:
                return True
            else:
                return False

print(cmmn_elmnt([1, 5, 3, 7, 8], [10, 15, 25, 5, 9]))

# 12. Write a Python program to print a specified list after removing the 0th, 4th and 5th elements. 
# Sample List : ['Red', 'Green', 'White', 'Black', 'Pink', 'Yellow']
# Expected Output : ['Green', 'White', 'Black']

col_list = ['Red', 'Green', 'White', 'Black', 'Pink', 'Yellow']
new_list = []
for i in range(len(col_list)):
    if i==0 or i==4 or i==5:
        continue
    new_list.append(col_list[i])

print(new_list)

#14. Write a Python program to print the numbers of a specified list after removing even numbers from it.

my_list8 = [1, 6, 2, 24, 25]
odd_list = []
for i in my_list8:
    if i % 2!= 0:
        odd_list.append(i)

print(odd_list)

#15. Write a Python program to shuffle and print a specified list.

from random import shuffle

my_list9 = [2, 6, 5,  4, 1]
shuffle(my_list9)

print(my_list9)

# 16. Write a Python program to generate and print a list of first and last 5 elements where the values are square 
# of numbers between 1 and 30 (both included).

my_list10 = []
count = 0
for i in range(1, 31):
    if i>=1 and i<=30:
        my_list10.append(i**2)
my_list11 = []
my_list11.append(my_list10[:6]+ my_list10[26:31])
print(my_list11)

# 17. Write a Python program to generate and print a list except for the first 5 elements, where the values are 
# square of numbers between 1 and 30 (both included). 

my_list10 = []
count = 0
for i in range(1, 31):
    if i>=1 and i<=30:
        my_list10.append(i**2)
my_list11 = []
my_list11.append(my_list10[:6]+ my_list10[26:31])
print(my_list11)

#18. Write a Python program to generate all permutations of a list in Python.

my_list12 = [1, 2, 3] #[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 2, 1], [3, 1, 2]

#60. Write a Python program to find a tuple, the smallest second index value from a list of tuples. 

tup_list = [(2, 6), (2, 8), (4, 6), (8, 4)]
# print(tup_list[0][1])

min = tup_list[0][1]
for i in tup_list:
    # print(i[1])
    if i[1] < min:
        min = i[1]
# print(min)

for i in tup_list:
    if i[1] == min:
        print(i)

#19. Write a Python program to get the difference between the two lists.

my_list13 = [10, 20, 30, 40]
my_list14 = [10, 2, 30]
new_list25 = []

for i in my_list13:
    if i not in my_list14:
        new_list25.append(i)

print(new_list25)

#20. Write a Python program access the index of a list.
""" list1=[12,25,65,58,45]
dict1={}
for i in range(0,len(list1)):
    dict1[i]=list1[i]
print(dict1) """
#21.Write a Python program to convert a list of characters into a string.
""" li=['a','b','c','d']
str=""
for i in li:
    str+=i
print(str) """

#22.Write a Python program to find the index of an item in a specified list.
""" list1=[12,25,65,58,45]
a=int(input("enter a number"))
for i in range(len(list1)):
    if list1[i]==a:
        print("index of ",a,"is ",i) """
#23.Write a Python program to flatten a shallow list.
li=[[12,25,65,58,45],['a','b','c','d']]
li1=[]
for  i in li:
    for j in i:
        li1.append(j)
print(li1)

#or

# my_list21 = [1, 2, 3, 4, 5, [6, 7, 8, 9, 10], 2, 6]
my_list21 = [[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]]
new_list2 = []

for i in my_list21:
    if isinstance(i, list):
        for j in i:
            new_list2.append(j)
        continue
    new_list2.append(i)

print(new_list2)


#24. Write a Python program to append a list to the second list.
""" li=[12,25,65,58,45]
li1=['a','b','c','d']
for i in li:
    li1.append(i)
print(li1) """
#25.Write a Python program to select an item randomly from a list.
""" import random as rm
li=[12,25,65,58,45]
i=rm.randint(0,len(li))
print(li[i]) """

#26.Write a python program to check whether two lists are circularly identical.
""" li=[10,20,0,0,10]
li1=[0,0,10,10,20]
def join(lis1,lis2):
    lis=lis2*2
    for i in range(0,len(lis1)):
        li=[]
        for j in range(i,len(lis1)+i):
            li.append(lis[j])
            if li==lis1:
                return True
a=join(li,li1)
if a==True:
    print("lists are circulerly identical ")
else:
     print("lists are NOT circulerly identical ") """

#27. Write a Python program to find the second smallest number in a list. 

my_list15 = [10, 15, 5, 25, 51]
for i in range(len(my_list15)):
    if my_list[i] > max:
        max = my_list[i]

#30. Write a Python program to get the frequency of the elements in a list.

my_list16 = [10, 15, 2, 5, 15]
num = 15
count = 0
for i in my_list16:
    if i == num:
        count +=1

print(count)

# 38. Write a Python program to change the position of every n-th value with the (n+1)th in a list. 
# Sample list: [0,1,2,3,4,5]
# Expected Output: [1, 0, 3, 2, 5, 4]

my_list17 = [0,1,2,3,4,5]

for i in range(0, len(my_list17), 2):
    my_list17[i], my_list17[i+1] = my_list17[i+1], my_list17[i]

print(my_list17)

#40. Write a Python program to split a list based on first character of word.
word_list = ['be','have','do','say','get','make','go','know','take','see','come','think',
     'look','want','give','use','find','tell','ask','work','seem','feel','leave','call']

#21. Write a Python program to convert a list of characters into a string. 

my_list18 = ['a', 'p', 'p', 'l', 'e']
mystring = ""
for i in my_list18:
    mystring = mystring + i

print(mystring)
print(type(mystring))

#24. Write a Python program to append a list to the second list

my_list19 = [1, 2, 3, 4, 5]
my_list20 = [6, 7, 8, 9, 10]

for i in my_list20:
    my_list19.append(i)

print(my_list19)

#23. Write a Python program to flatten a shallow list. 

my_list21 = [1, 2, 3, 4, 5, [6, 7, 8, 9, 10], 2, 6]
new_list2 = []
# print(my_list21[len(my_list21)-1])

for i in my_list21:
    if isinstance(i, list):
        for j in i:
            new_list2.append(j)
        continue
    new_list2.append(i)

print(new_list2)

#25. Write a Python program to select an item randomly from a list.

import random

my_list22 = [1, 5, 25, 6, 8, 9, 10, 3, 2]

rand = random.randint(0, len(my_list22)-1)
print(my_list22[rand])

#26. Write a python program to check whether two lists are circularly identical.

my_list23 = [10, 20, 0, 0, 10]
my_list24 = [0, 0, 10, 10, 20]
# my_list24 = [0, 0, 10, 20, 20, 0, 0, 10, 20, 20]
new_list4 = []
new_list5 = []
# print(my_list24.index(my_list23[0]))

# print(my_list24[my_list24.index(my_list23[0]) :])

new_list4.append(my_list24[my_list24.index(my_list23[0]) :])
new_list4.append(my_list24[0:my_list24.index(my_list23[0])])
# print(new_list4)

for i in new_list4:
    for j in i:
        new_list5.append(j)

print(new_list5)

for i in range(len(new_list5)):
    if new_list5[i] != my_list23[i]:
        print("not identical")
        break

else:
    print("lists are identical")








new_list3 = []
new_list4 = []

for i in 2*my_list23:
    new_list3.append(i)
print(new_list3)

for i in 2*my_list24:
    new_list4.append(i)
print(new_list4)

for i in new_list3:
    for j in new_list4:
        if j == i:
            pass

#27. Write a Python program to find the second smallest number in a list. 

my_list25 = [10, 22, 25, 6, 8, 9, 10, 1, 1, 22, 6, 6]
min = my_list25[0]
sec_min = my_list25[1]
if min > sec_min:
        sec_min, min = min, sec_min

for i in range(0, len(my_list25)):
    if my_list25[i] < min:
        temp = min
        min = my_list25[i]
        sec_min = temp

print(sec_min)

#28. Write a Python program to find the second largest number in a list.

my_list25 = [100, 22, 25, 6, 8, 9, 10, 1, 22]
max = my_list25[0]
sec_max = my_list25[1]
if max < sec_max:
        sec_max, max = max, sec_max

for i in range(0, len(my_list25)):
    if my_list25[i] > max:
        temp = max
        max = my_list25[i]
        sec_max = temp

print(sec_max)

#29. Write a Python program to get unique values from a list. 

my_list26 = [10, 25, 25, 6, 8, 9, 10, 1, 8]
new_list6 = []

for i in my_list26:
    if i not in new_list6:
        new_list6.append(i)

print(new_list6)

# 30. Write a Python program to get the frequency of the elements in a list.

my_list = [10, 25, 25, 6, 8, 9, 10, 1, 8]
mydict = {}

for i in my_list:
    mydict[i] = my_list.count(i)
print(mydict)

#32. Write a Python program to check whether a list contains a sublist.

my_list27 = [10, 25, [2, 5, 8], 15]

for i in my_list27:
    if isinstance(i, list):
        print("True")
        break
else:
    print("False")

#################

my_list27 = [7,10,15, 2, 45]
new_list7 = [15, 2, 7]
flag = 0
for i in new_list7:
    if i in my_list27:
        flag = 1

if flag == 1:
    print("True")
else:
    print("False")

###################

my_list28 = [45,10,15, 15, 15, 2, 7,15]
new_list8 = [15, 2, 7]
for i in range(len(my_list28)):
    if new_list8[0] == my_list28[i]:
        list10 = my_list28[i:]
print(list10)

if list10[:len(new_list8)] == new_list8:
    print("True")
else:
    print("False")

#33. Write a Python program to generate all sublists of a list.

# 63. Write a Python program to insert a given string at the beginning of all items in a list. 
# Sample list : [1,2,3,4], string : emp
# Expected output : ['emp1', 'emp2', 'emp3', 'emp4']

my_list29 = [1,2,3,4]
string = "emp"
new_list9 = []
for i in my_list29:
    new_list9.append("emp"+str(i))

print(new_list9)

# 77. Write a Python program to decode a run-length encoded given list. 
# Original encoded list:
# [[2, 1], 2, 3, [2, 4], 5, 1]
# Decode a run-length encoded said list:
# [1, 1, 2, 3, 4, 4, 5, 1]

##

#41. Write a Python program to create multiple lists. 

mydict = {}

for i in range(5):
    mydict[i] = []
print(mydict.values)
print(mydict)


#33.Write a Python program to generate all sublists of a list.
""" li=[10,20,[10,20,30,45,65],52,65,85]
for i in li:
    if isinstance(i,list):
        print(i) """
        
#34. Write a Python program using Sieve of Eratosthenes method for computing primes upto a specified 
# number. 
# Note: In mathematics, the sieve of Eratosthenes, (Ancient Greek: κόσκινον Ἐρατοσθένους, kóskinon 
# Eratosthénous) one of a number of prime number sieves, is a simple, ancient algorithm for finding all prime 
# numbers up to any given limit.
li=[i for i in range(1,101)]
print(li)
for i in li[:]:
    if i%2==0:
        li.remove(i)    
    elif i%3==0 and i!=3:
        li.remove(i)
    elif i%5==0 and i!=5:
        li.remove(i)
    elif i%7==0 and i!=7:
        li.remove(i)
    elif i%11==0 and i!=11:
        li.remove(i)
print(li)

#####
#34. Write a Python program using Sieve of Eratosthenes method for computing primes upto a specified 
# number. 
# Note: In mathematics, the sieve of Eratosthenes, (Ancient Greek: κόσκινον Ἐρατοσθένους, kóskinon 
# Eratosthénous) one of a number of prime number sieves, is a simple, ancient algorithm for finding all prime 
# numbers up to any given limit.

list=[i for i in range(1,101)]
prime_list = []
for el in list:
    for i in range(2, el):
        if el % i == 0:
            break
    else:
        prime_list.append(el)

print(prime_list)



#35. Write a Python program to create a list by concatenating a given list which range goes from 1 to n. 
# Sample list : ['p', 'q']
# n =5
# Sample Output : ['p1', 'q1', 'p2', 'q2', 'p3', 'q3', 'p4', 'q4', 'p5', 'q5']
li1=['p','q']
li=[]
n=5
for i in range(1,n+1):
    li.append(li1[0]+str(i))
    li.append(li1[1]+str(i))
print(li)

#36.Write a Python program to get variable unique identification number or string.
""" x = 100
print(format(id(x), 'x'))
s = 'w3resource'
print(format(id(s), 'x'))  """

#37. Write a Python program to find common items from two lists. 
li=[10,20,52,65,85, 10]
li1=[10,20,30,45,65,10, 10, 10, 10]
li2=[]
for i in li:
    for j in li1:
        if i==j and j not in li2:
            li2.append(i)
print(li2)
#38. Write a Python program to change the position of every n-th value with the (n+1)th in a list. 
# Sample list: [0,1,2,3,4,5]
# Expected Output: [1, 0, 3, 2, 5, 4]
""" li=[0,1,2,3,4,5]
n=2
for i in range(0,len(li),n):
    li[i],li[i+1]=li[i+1],li[i]
print(li) """
# 39. Write a Python program to convert a list of multiple integers into a single integer. 
# Sample list: [11, 33, 50]
# Expected Output: 113350
""" li1=[11, 33, 50]
str1=""
for i in li1:
    str1+=str(i)
    num=int(str1)
print(num)
 """
#40.Write a Python program to split a list based on first character of word. 
""" li=["mayur","mayuri","manish","raj","ram","raju","baji","sachin"]
obj = {}
for i in li:
    if li[i][0]==li[i+1][0]:
        obj[i] = []
        obj[i].append(li[i])
print(obj) """

#41.Write a Python program to create multiple lists.
""" obj = {}
for i in range(1, 21):
    obj[i] = []
print(obj) """

for i in range(1, 11):
    print([])

#42. Write a Python program to find missing and additional values in two lists. 
# Sample data : Missing values in second list: b,a,c
# Additional values in second list: g,h
""" li=[15,45,56,78,56]
li2=[65,78,45,62] 
l=[]
l1=[]
for i in li:
    if i not in li2:
        l.append(i)
for i in li2:
    if i not in li:
        l1.append(i)
print("Missing values in second list: ",l)
print("Additional values in second list: ",l1) """

#43.Write a Python program to split a list into different variables.

my_list = [('love', 'yes', 'no'), ('valentine', 'no', 'yes'), ('day', 'yes','yes')]

for i in my_list:
    print(i)

# 44. Write a Python program to generate groups of five consecutive numbers in a list. 

my_list = [ i for i in range(1, 26)]
new_list = []
li = []
for i in my_list:
    li.append(i)
    if len(li) == 5:
        new_list.append(li)
        li = []
print(new_list)

# #51. Write a Python program to split a list every Nth element.
# Sample list: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n']
# Expected Output: [['a', 'd', 'g', 'j', 'm'], ['b', 'e', 'h', 'k', 'n'], ['c', 'f', 'i', 'l']]

lst=['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n']
lst2=[]
lst3=[]
lst4=[]
n=int(input("Enter a no to split = "))
for i in range(0,len(lst),n):
    lst2.append(lst[i])
for i in range(1,len(lst),n):
    lst3.append(lst[i])  
for i in range(2,len(lst),n):
    lst4.append(lst[i])   
lst=[lst2,lst3,lst4]
print(lst)

# 45. Write a Python program to convert a pair of values into a sorted unique array.

my_list = [(1, 2), (3, 4), (1, 2), (5, 6), (7, 8), (1, 2), (3, 4), (3, 4),
 (7, 8), (9, 10)]
my_list2 = []

for tup in my_list:
    for el in tup:
        if el not in my_list2:
            my_list2.append(el)

print(my_list2)
        
# 47. Write a Python program to insert an element before each element of a list.

my_list = [15,45,56,78,56]
new_list = []
for i in range(len(my_list)):
    new_list.append('a')
    new_list.append(my_list[i])
print(new_list)

# 49. Write a Python program to convert list to list of dictionaries.
Sample_list = ["Black", "Red", "Maroon", "Yellow"]
Sample_list2 =  ["#000000", "#FF0000", "#800000", "#FFFF00"]

col_dict = {}
for i in range(len(Sample_list)):
    col_dict[Sample_list[i]] = Sample_list2[i]

print(col_dict)

# 52. Write a Python program to compute the similarity between two lists.
# Sample data: ["red", "orange", "green", "blue", "white"], ["black", "yellow", "green", "blue"]
# Expected Output:
# Color1-Color2: ['white', 'orange', 'red']
# Color2-Color1: ['black', 'yellow']

"""lst1=["red", "orange", "green", "blue", "white"]
lst2=["black", "yellow", "green", "blue"]
lst3=[i for i in lst1 if i not in lst2]
lst4=[i for i in lst2 if i not in lst1]
print(lst3)
print(lst4)""" 


#53. Write a Python program to create a list with infinite elements.
"""lst2=[]
while 1:
    
    lst=int(input("Enter a no = "))
    lst2.append(lst)
    print(lst2)
    """

#54. Write a Python program to concatenate elements of a list.

"""lst1=[str(n) for n in input("Enter a list: ").split()]
con=""
for i in lst1:
    con = con + i
print(con)"""

#55 Write a Python program to remove key values pairs from a list of dictionaries.

lst=[{1:"Gaurav",2:"Mankar",3:"Prats",4:"Mayu"},{45:"dombivli",46:"Mumbai"},{50:"yuvraj",51:"Dhoni"},{100:"Dog"}]
n=int(input("Enter a dict index which you want to remove = "))
m=int(input("Enter a key which you want to remove = "))
del lst[n][m]
print(lst)

#56 Write a Python program to convert a string to a list.

string1=input("Enter a string : ").split()
print(type(string1))
print(string1)


#57 Write a Python program to check whether all items of a list is equal to a given string.

"""lst2=[]
lst = ['gau','is','a','student']
str1=input("Enter a string = ")
strlst=str1.split(' ')
for i in lst:
    for j in range(0,len(strlst)):
        if i==strlst[j]:
            lst2.append(i)
print(lst2)
if lst2==lst:
    print("iems in list and string are same")
else:
    print("iems in list and string are not same")"""
    
    
# 58. Write a Python program to replace the last element in a list with another list.
# Sample data : [1, 3, 5, 7, 9, 10], [2, 4, 6, 8]
# Expected Output: [1, 3, 5, 7, 9, 2, 4, 6, 8]

"""lst1 = [1, 3, 5, 7, 9, 10]
lst2 = [2, 4, 6, 8]
a=len(lst1)-1
lst1.pop(a)
for i in lst2:
    lst1.append(i)

print(lst1)
"""

# 59. Write a Python program to check whether the n-th element exists in a given list.

"""lst1 = [1, 3, 5, 7, 9, 10]
n=int(input("Enter a no = "))
for i in lst1:
    if n == i:
        print("element is exist")
        break
else:
    print("Element is not present")"""


# 60. Write a Python program to find a tuple, the smallest second index value from a list of tuples.

"""lst=[(2,6),(1,8),(5,9),(9,8)]
lst=sorted(lst)
print(lst)
print(lst[1])"""

#70. Write a Python program to get the depth of a dictionary.

dict = {'a':1, 'b': {'c': {'d': {}}}}

cnt = 0
strng = str(dict)
for i in strng:
    if i == '}':
        cnt+=1
print(cnt)

# 71. Write a Python program to check whether all dictionaries in a list are empty or not. 
# Sample list : [{},{},{}]
# Return value : True
# Sample list : [{1,2},{},{}]
# Return value : False

Sample_list = [{}, {}, {}, {}]
count = 0
for i in Sample_list:
    if isinstance(i, dict):
        if len(i) == 0:
            count+=1
        else:
            break
    
if count == len(Sample_list):
    print(True)
else:
    print(False)

# 72. Write a Python program to flatten a given nested list structure. 
# Original list: [0, 10, [20, 30], 40, 50, [60, 70, 80], [90, 100, 110, 120]]
# Flatten list:
# [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120]

my_list = [0, 10, [20, 30], 40, 50, [60, 70, 80], [90, 100, 110, 120]]
new_list = []

for i in my_list:
    if isinstance(i, list):
        for j in i:
            new_list.append(j)
        continue
    new_list.append(i)

print(new_list)

# 73. Write a Python program to remove consecutive duplicates of a given list. 
# Original list:
# [0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]
# After removing consecutive duplicates:
# [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]

my_list = [0, 0, 0, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]
new_list = []

for i in range(len(my_list)):
    ind = i+1
    if ind < len(my_list)-1:
        
        while my_list[i] == my_list[ind]:
            if new_list.count(my_list[i]) < 1:
                new_list.append(my_list[i])
            ind +=1
print(new_list)

##########
# 73. Write a Python program to remove consecutive duplicates of a given list. 
# Original list:
# [0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]
# After removing consecutive duplicates:
# [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]

my_list = [0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4, 4]
i = 0
while i < len(my_list)-1:
    if my_list[i] == my_list[i+1]:
        del my_list[i]
    else:
        i+=1
print(my_list)

####OR####

for i in range(len(my_list)):
    for j in range(i+1, len(my_list)):
        if my_list[i] == my_list[j]:
            new_list.append(my_list[j])
            continue
        new_list.append(my_list[j])

print(new_list)

######################

mylist=[1, 1, 2, 3, 1, 3, 5, 1]
finallist=[]
count=1
for i in range(len(mylist)-1):
    temp=mylist[i]
    for j in range(1,len(mylist)):
        temp2=mylist[j]
        if temp!=temp2:
            finallist.append([count,temp])
            temp=temp2
            count=1
        else:
            count+=1       
print(finallist)

# 77. Write a Python program to decode a run-length encoded given list. 
# Original encoded list:
# [[2, 1], 2, 3, [2, 4], 5, 1]
# Decode a run-length encoded said list:
# [1, 1, 2, 3, 4, 4, 5, 1]

Sample_list = [[2, 1], 2, 3, [2, 4], 5, 1]



# 75. Write a Python program to create a list reflecting the run-length encoding from a given list of integers or a 
# given list of characters. 
# Original list:
# [1, 1, 2, 3, 4, 4.3, 5, 1]
# List reflecting the run-length encoding from the said list:
# [[2, 1], [1, 2], [1, 3], [1, 4], [1, 4.3], [1, 5], [1, 1]]

Sample_list = [1, 1, 2, 3, 4, 4.3, 5, 1]
new_list = []

for i in Sample_list:
    cnt_list = []
    cnt_list.append(Sample_list.count(i))
    cnt_list.append(i)
    if cnt_list not in new_list:
        new_list.append(cnt_list)

print(new_list)

# 74. Write a Python program to pack consecutive duplicates of a given list elements into sublists. 
# Original list:
# [0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]
# After packing consecutive duplicates of the said list elements into sublists:
# [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]

""" my_list = [0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]
new_list = []
i = 0
while i < len(my_list)-1:
    if my_list[i] == my_list[i+1]:
        new_list.append([my_list[i]])
    else:
        new_list.append([my_list[i]])
        i+=1
print(my_list) """

#66. Write a Python program to find the list in a list of lists whose sum of elements is the highest. 
# Sample lists: [1,2,3], [4,5,6], [10,11,12], [7,8,9]
# Expected Output: [10, 11, 12]

sample_list = [[1,2,3], [4,5,6], [10,11,12], [7,8,9]]
print(sample_list)
print("\n")

max_sum = 0
sub_list = sample_list[0]
for sub_list in sample_list:
    sum = 0
    for j in range(len(sub_list)):
        sum = sum + sub_list[j]
    if sub_list == sample_list[0]:
        max_sum = sum
    if sum > max_sum:
        max_sum = sum
        max_list = sub_list
print("Max sum is "+str(max_sum)+" and the SubList having maxsum is",max_list)
print("\n")